'''
Challenge for 09/May/2020

There are 10 types of people in the world: Those who understand binary, and those who don't.

You and your fellow cohort of those in the "know" when it comes to binary decide to come up with a secret "handshake".

1 = wink
10 = double blink
100 = close your eyes
1000 = jump


10000 = Reverse the order of the operations in the secret handshake.

Given a decimal number, convert it to the appropriate sequence of events for a secret handshake.

Here's a couple of examples:

Given the input 3, the function would return the array ["wink", "double blink"] because 3 is 11 in binary.

Given the input 19, the function would return the array ["double blink", "wink"] because 19 is 10011 in binary.
Notice that the addition of 16 (10000 in binary) has caused the array to be reversed.
'''

def handshake(number):

    bnum = bin(number)
    
    bnum = bnum[bnum.index('b')+1:]
        
    handshake_options = ['wink','double blink','close your eyes','jump']
    secret_handshake = []

    if len(bnum) == 5:   
        handshake_options.reverse()
        bnum=bnum[1:]

    for pos,digit  in enumerate(bnum):
        if digit == '1':
            secret_handshake.append(handshake_options[pos])

    return secret_handshake
       
while True:
    num=int(input('Input an integer number to get the secret handshake: '))
    if (num <= 0 and num > 31) or (num in (16, 17, 18, 20, 24)):
        print('Enter a valid number for the handshake')
    else:
        print(handshake(num))
        break
